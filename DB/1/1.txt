SQL 개요 및 기본 개념

문제 1

SQL이란 무엇이며, 어떤 용도로 사용되나요?

SQL(Structured Query Language)은 데이터베이스에서 데이터를 관리하고 조작하기 위한 언어입니다. 
주로 데이터베이스 내에서 데이터를 삽입, 조회, 수정, 삭제하는데 사용됩니다. 

문제 2

관계형 데이터베이스(RDBMS)의 대표적인 예시 세 가지를 제시하세요.

MySQL
PostgreSQL
Oracle DB

문제 3

SQL과 NoSQL 데이터베이스의 주요 차이점 두 가지를 설명하세요.

데이터 구조: 
SQL 데이터베이스는 고정된 스키마를 가진 테이블 형태로 데이터를 저장하며, 관계형 모델을 따릅니다. NoSQL은 유연한 스키마를 가지며, 문서, 키-값, 그래프 등 다양한 방식으로 데이터를 저장할 수 있습니다.

확장성: 
SQL 데이터베이스는 주로 수직적 확장(서버 성능 증가)을 사용하고, 
NoSQL은 수평적 확장(서버 추가)으로 확장이 가능합니다.

문제 4

다음 중 SQL의 기본 명령어에 해당하지 않는 것은 무엇인가요?
a) SELECT

b) INSERT

c) UPDATE

d) DROP

e) DELETE


d) DROP
DROP은 테이블이나 데이터베이스를 삭제하는 명령어로 SQL의 기본 명령어(DML)에 포함되지 않습니다.

문제 5

SELECT 문에서 모든 컬럼을 조회하기 위한 와일드카드는 무엇인가요?

* (애스터리스크)

문제 6

특정 조건에 맞는 데이터를 조회할 때 사용하는 절은 무엇인가요?

WHERE 절

문제 7

AND, OR, NOT 연산자의 기능을 간단히 설명하세요.

AND: 두 조건이 모두 참일 때 결과가 참이 됩니다.
OR: 두 조건 중 하나라도 참이면 결과가 참이 됩니다.
NOT: 조건이 참이면 거짓으로, 거짓이면 참으로 결과를 반전시킵니다.

문제 8

다음 SQL 문에서 사용된 연산자는 무엇이며, 어떤 기능을 하나요?

SELECT * FROM students WHERE name LIKE '김%';

LIKE 연산자 

LIKE 연산자는 문자열 패턴을 검색하는 데 사용됩니다. 
예시코드의 '김%'는 '김'으로 시작하는 모든 이름을 찾습니다.

문제 9

범위를 지정하여 데이터를 조회할 때 사용하는 연산자는 무엇인가요? 예시와 함께 설명하세요.

BETWEEN 연산자를 사용하여 범위를 지정할 수 있습니다.

예시:
SELECT * FROM people WHERE age BETWEEN 18 AND 40;
이는 18세에서 40세 사이의 사람을 조회합니다.

문제 10

INSERT 문을 사용하여 여러 행을 한 번에 삽입하는 방법을 예시와 함께 설명하세요.

INSERT INTO 동물 (id, 이름, 나이, 종류)
VALUES 
(1, '사자', 5, '포유류'),
(2, '호랑이', 3, '포유류'),
(3, '독수리', 4, '조류'),
(4, '거북이', 10, '파충류');

-동물테이블에 4개의 데이터를 한번에 삽입 (id 이름 나이 종류순서대로)

문제 11

UPDATE 문을 사용하여 특정 조건의 데이터를 수정할 때 주의해야 할 점은 무엇인가요?

WHERE 절을 사용하지 않으면 테이블의 모든 행이 수정될 수 있으므로, 
*특정 조건*을 명확히 지정해야 합니다.

문제 12

DELETE 문과 TRUNCATE 문의 차이점을 설명하세요.

DELETE: 특정 조건에 맞는 행을 삭제할 수 있으며, 트랜잭션을 지원하므로 롤백이 가능합니다.
TRUNCATE: 테이블의 모든 데이터를 삭제하지만, 트랜잭션을 지원하지 않으며, 더 빠르게 수행됩니다.

문제 13

GROUP BY 절의 기능과 함께 집계 함수를 사용하는 예시를 보여주세요.

GROUP BY 절은 동일한 값을 가진 행들을 그룹화하여 집계할 수 있게 합니다. 

예시:
SELECT 종류, AVG(나이) AS 평균나이
FROM 동물
GROUP BY 종류;

이 쿼리는 동물 테이블에서 종류(동일한 값)로 그룹을 나눈 후(그룹화), 
각 그룹 내의 동물의 평균 나이를 계산(AVG 사용)합니다.

문제 14

INNER JOIN과 LEFT JOIN의 차이점을 설명하세요.
INNER JOIN: 두 테이블 간에 일치하는 데이터만 반환합니다.
LEFT JOIN: 왼쪽 테이블의 모든 데이터를 반환하며, 
오른쪽 테이블과 일치하지 않는 데이터는 NULL로 채웁니다.

문제 15

서브쿼리(Subquery)란 무엇이며, 어떤 상황에서 사용되나요?

서브쿼리는 다른 SQL 쿼리 안에 포함된? 중첩된? 쿼리입니다. 

서브쿼리는
1.데이터 검색에 필요한 추가적인 조건이 있을 때
2.복잡한 쿼리를 분리할 때
3.집계된 값을 기준으로 사용할 때 사용됩니다.

문제 16

윈도우 함수(Window Function)의 목적과 예시를 설명하세요.

윈도우 함수는 데이터의 특정 집합에 대한 계산을 수행하며, 결과를 모든 행에 대해 반환합니다.
즉 데이터를 그룹화하면서 원래의 행은 유지합니다.

윈도우 함수는 OVER 절과 함께 사용되며, 주로 다음과 같은 목적에서 사용됩니다:
1.순위 계산
2.이동 평균 또는 합계
3.전체 데이터를 기준으로 한 계산


ROW_NUMBER(): 각 행에 대해 고유한 순번을 부여합니다.
RANK(): 동일한 값에 대해 같은 순위를 부여하고, 그다음 순위는 건너뜁니다.
SUM(), AVG() 등과 함께: 윈도우 프레임 내에서 집계 계산을 할 수 있습니다.

예시:
SELECT 이름, 나이, ROW_NUMBER() OVER (ORDER BY 나이 DESC) AS 장수순위
FROM 동물;

이런식으로 나이가 가장 많은 동물을 순서대로 순위 부여할수있습니다.
이쿼리에서 동일한 나이가 나온다면 중간에 RANK()를 사용하여서 같은 순위도 부여가능합니다.

문제 17

테이블 생성 시 PRIMARY KEY와 FOREIGN KEY의 역할을 각각 설명하세요.

PRIMARY KEY: 테이블에서 각 행을 고유하게 식별하는 열입니다.
FOREIGN KEY: 다른 테이블의 PRIMARY KEY를 참조하여 테이블 간 관계를 나타냅니다.

문제 18

트랜잭션(Transaction)이란 무엇이며, 어떤 특징을 가지나요?

트랜잭션은 데이터베이스 내에서 일어나는 작업의 단위로, 하나의 트랜잭션은 모두 성공하거나 모두 실패하는 특성을 가집니다. 

ACID 특성을 따릅니다:
Atomicity: 모두 성공하거나 모두 실패
Consistency: 일관성 유지
Isolation: 트랜잭션 간 간섭 방지
Durability: 완료된 트랜잭션의 결과는 영구적으로 반영

문제 19

사용자 계정을 생성하고 특정 권한을 부여하는 SQL 명령어를 작성하세요.

CREATE USER 'newuser'@'localhost' IDENTIFIED BY 'password';
GRANT SELECT, INSERT ON database_name.* TO 'newuser'@'localhost';

문제 20

SQL에서 데이터베이스의 성능을 향상시키기 위해 인덱스를 사용하는데, 인덱스의 장점과 단점을 각각 설명하세요.

장점: 데이터를 빠르게 검색할 수 있습니다.
단점: 데이터를 삽입, 수정, 삭제할 때 인덱스도 업데이트되므로 성능 저하가 발생할 수 있습니다.